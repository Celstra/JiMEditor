<Window x:Class="JiME.Views.HelpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        Title="" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="725" MinHeight="400">

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>

		<TabControl x:Name="groupHelp" Margin="10" Background="#FF2D2D30" BorderThickness="0,1,0,0" Visibility="Collapsed">
			<TabItem Header="Token Interaction Groups" Padding="5">
				<Border Style="{StaticResource callout}">
					<StackPanel>
						<TextBlock Style="{StaticResource Heading}" Text="What Are Token Interaction Groups?"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
When you create a Chapter with a Random Tile Pool, there needs to be a way to create a pool of Tokens with Interactions that randomly spawn on those random Tiles. That's where Token Interaction Groups come in - they provide a way to make a pool of Events from which to randomly spawn Tokens on the tiles.
						</TextBlock>

						<TextBlock Margin="0,10,0,0" Style="{StaticResource Heading}" Text="Creating Token Interaction Groups"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="1) When creating an Event, make sure Token Interaction is checked."/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="2) Select a Token Type associated with this Token Interaction Event."/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="3) At the end of the Event Name, use 'GRP#' to place it into an Interaction Group, where # uniquely identifies that group."/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="4) Use this same GRP# to add other Token Interactions you create to this group."/>
						<TextBlock Margin="0,10,0,0" Style="{StaticResource SubText}" Text="Example: Create three different Threat Events using the Event Names of 'orcs GRP1', 'goblin GRP1' and 'troll GRP1'"/>
						<TextBlock Margin="0,0,0,0" Style="{StaticResource SubText}" TextWrapping="Wrap" Text="When you assign this Group to a Random Tile Pool, Tokens will be randomly spawned on the Tiles using Events from this Group."/>
						<TextBlock Style="{StaticResource SubText}" Margin="0,10,0,0" TextWrapping="Wrap" Text="NOTE: The Token Interactions in the group don't have to be of the same type. They can be a combination of any of the Event types." FontStyle="Italic"/>
					</StackPanel>
				</Border>
			</TabItem>

			<TabItem Header="Using Interaction Groups In The Tile Pool Editor" Padding="5">
				<Border Style="{StaticResource callout}">
					<StackPanel>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
							The Interaction Group dropdown menu in the Tile Pool Editor lists all the Token Interaction Groups you've created. When you select a Token Interaction Group from the dropdown menu, the interface tells you how many Events were found using that group name.
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,10,0,0">
							The interface also tells you how many total spaces are available to place Tokens on the Tiles you've added to this Chapter's Random Tile Pool. For example, using Tiles 201 and 202 will give you 4 total spaces for Token placement.
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,10,0,0">
							It's up to you if you want to use all of the Token Interactions in the group, or only a small selection of them, randomly chosen during the game. Specify this number in the text box. You can only use as many Token Interactions as there are Tile spaces available to hold them.
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,10,0,0">
							If you add or remove Token Interactions from the Group assigned to this Random Tile Pool, you will probably want to revisit these settings to adjust this number.
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,10,0,0">
							Example: Using Tiles 201 and 202, we have 4 spaces available. Let's say we assign an Interaction Group to this Tile Pool with 6 different Events in it. We can use a maximum of 4 of those 6 Events because there are only 4 spaces available on the Tiles we're using. However, we only want 2 of those 6 Events to randomly spawn Tokens on these Tiles, so we enter 2 into the text box. During the game, the Companion App will randomly choose and spawn 2 Tokens out of the Group. The other 4 are discarded.
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,10,0,0">
							<Bold><Italic>CAUTION</Italic></Bold>: If you assign a Token Interaction Group to more than one Chapter, the same Events could be seen by players more than once, causing confusion. On the other hand, Events can be created that are generic enough to appear more than once by design. A good example of this would be creating a Group with 5 different enemy Threat Events in it. This Group can be used over and over to randomly spawn one of the Threats in the Group when it's triggered.
						</TextBlock>
					</StackPanel>
				</Border>
			</TabItem>
		</TabControl>

		<TabControl x:Name="tokenHelp" Margin="10" Background="#FF2D2D30" BorderThickness="0,1,0,0" Visibility="Collapsed">
			<TabItem Header="Events" Padding="5">

				<Border Style="{StaticResource callout}">
					<StackPanel>
						<TextBlock Style="{StaticResource Heading}" Text="What Are Events?"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					Events make up the action and challenges the players face while they play. There are 5 kinds of Events: Text Popups, Story Branches, Darkness, Decisions, Stat Tests, and Enemy Threats. Events that do NOT have Token Interaction checked are activated by a Trigger that you specify in the "Triggered By" dropdown menu.
						</TextBlock>

						<TextBlock Margin="0,5,0,0" Style="{StaticResource Heading}" Text="Text Popup Event"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					A simple dialog box with text. Players click a Continue button to dismiss it.
						</TextBlock>

						<TextBlock Margin="0,5,0,0" Style="{StaticResource Heading}" Text="Story Branch Event"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
A Story Branch is a special kind of Event that tests whether a specified Trigger has been set, then fires additional Triggers or Events based on the result.
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
For example, you might create a Trigger called "Treasure Found" that is only triggered (set to True) if the players discover some kind of treasure during the game. Later, a Story Branch Event could be fired that tests whether this "Treasure Found" Trigger has been set, which in turn fires a Trigger or Event based on whether that happened or not.
						</TextBlock>

						<TextBlock Margin="0,5,0,0" Style="{StaticResource Heading}" Text="Decision Event"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
Decisions are Events that present a choice to the player. Decision Events can have 2 or 3 choices to select from. A Trigger that you specify is fired based on which choice the players select during the game.</TextBlock>

						<TextBlock Margin="0,5,0,0" Style="{StaticResource Heading}" Text="Stat Test Event"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
A Stat Test Event presents the players with a challenge that tests one of their Hero's Stats (Might, Agility, Spirit, Wisdom, or Wit). During a Stat Test, two buttons (labeled 'Pass' and 'Fail') will be presented to the player. You can assign Triggers to the pass and fail conditions, one of which will be fired based on the outcome of the test.</TextBlock>

						<TextBlock Margin="0,5,0,0" Style="{StaticResource Heading}" Text="Threat Event"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					When a Threat Event is activated, one or more enemy groups that you create will be spawned in the game.
						</TextBlock>
					</StackPanel>
				</Border>
			</TabItem>

			<TabItem Header="Token Interaction Events" Padding="5">
				<Border Style="{StaticResource callout}">
					<StackPanel>
						<TextBlock Margin="0,0,0,0" Style="{StaticResource Heading}" Text="What Are Token Interaction Events?"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
A Token Interaction Event is the same as a normal Event except for HOW it is activated. It is only activated by a player <Italic>interacting</Italic> with a <Italic><Bold>Token</Bold></Italic> on a Tile in the game. There are 4 kinds of Tokens: Person, Search, Threat and Darkness. Assign the Token Type after you check the Event to be a Token Interaction.
						</TextBlock>

						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
Marking an Event as a Token Interaction will make it available to assign to a Token in the Token Editor. Only Events with Token Interaction checked can be assigned to Tokens.
						</TextBlock>

					</StackPanel>
				</Border>
			</TabItem>
		</TabControl>

		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >
				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="okButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</Grid>
</Window>
