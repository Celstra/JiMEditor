<Window x:Class="JiME.Views.BranchInteractionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        ContentRendered="Window_ContentRendered"
        Title="Story Branch Event Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="725" Closing="Window_Closing">

	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="bvis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<Style TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Margin" Value="0,5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
	</Window.Resources>

	<StackPanel>
		<TabControl Margin="10" Background="#FF2D2D30" BorderThickness="0,1,0,0">

			<!--general properties-->
			<TabItem Header="General Properties" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}" Visibility="{Binding isThreatTriggered, Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="This Event is triggered by a Scenario Threat Threshold." HorizontalAlignment="Center"/>

							<TextBlock Style="{StaticResource SubText}" HorizontalAlignment="Center">
								Events triggered by Threat Thresholds cannot be Token Interactions and cannot be Triggered By another source.
							</TextBlock>

						</StackPanel>
					</Border>


					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<UniformGrid Columns="2">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="Event Name:"/>
								<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
								</TextBlock>
								<TextBox x:Name="nameTB" Text="{Binding interaction.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" TextChanged="nameTB_TextChanged"/>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Lore Reward:"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.loreReward}"/>
								</StackPanel>
							</StackPanel>

							<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
								<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
								<StackPanel Margin="10,0,0,0">
									<TextBlock Style="{StaticResource SubText}" Text="You can place this Event into an Interaction Group for use on randomly generated Tiles." TextWrapping="Wrap" VerticalAlignment="Center" Width="290"/>
									<TextBlock x:Name="groupInfo" Margin="0,5,0,0" Style="{StaticResource SubText}" Text="This Event is in the following group: None"/>
								</StackPanel>
							</StackPanel>

							<!--<StackPanel>
									<CheckBox x:Name="randomCB2" Content="This Event is Random" Foreground="White" IsChecked="{Binding interaction.isRandom}" Click="RandomCB_Click"/>
									<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
							Random Events are placed in a pool to be drawn from during the course of the game, usually activated by the built-in Random Event Trigger. They are only fired once unless it's a Monster Threat with Recycle checked.
									</TextBlock>
								</StackPanel>-->
						</UniformGrid>
					</Border>

					<!--token interaction-->
					<Border x:Name="isEventBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<CheckBox x:Name="isTokenCB" Content="This Event is a Token Interaction" Foreground="White" IsChecked="{Binding interaction.isTokenInteraction}" VerticalAlignment="Center" Click="isTokenCB_Click"/>
								<Button x:Name="tokenHelp" Background="#FFC98800" Click="tokenHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
							</StackPanel>

							<StackPanel x:Name="tokenTypeBox" Orientation="Horizontal" Visibility="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource bvis}}">
								<TextBlock Style="{StaticResource Heading}" Text="Token Type:" Margin="0,0,10,0"/>
								<RadioButton x:Name="personRadio" Content="Person" Margin="0,0,20,0"/>
								<RadioButton x:Name="searchRadio" Content="Search" Margin="0,0,20,0"/>
								<RadioButton x:Name="threatRadio" Content="Threat" Margin="0,0,20,0"/>
								<RadioButton x:Name="darkRadio" Content="Darkness"/>
							</StackPanel>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
							Token Interactions are triggered by players as they journey across the map. When a player clicks a Token, the Flavor Text below is shown. The player can decide to use an Action to Interact with the Token, after which the Event Text is shown, along with the Event itself.
							</TextBlock>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
								If this Token Interaction Event has already been assigned to a <Bold>Token</Bold> in the Tile Editor and you uncheck the Token Interaction setting above, that Token's <Italic>Token Interaction Trigger</Italic> will automatically be set to <Italic>None</Italic> because this Event will no longer be a Token Interaction.
							</TextBlock>
							<!--<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
Token Interactions are triggered by players as they journey across the map. When a player clicks a Token, the Flavor Text is shown. The player can decide to use an Action to Interact with the Token, after which the Event Text is shown, along with the Event itself.
							</TextBlock>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
								If this Token Interaction will be spawned on a random Tile, check the box above.
							</TextBlock>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
								If this Interaction is NOT a Token Interaction, it can be 'Triggered By' a Trigger, set below.
							</TextBlock>-->
						</StackPanel>
					</Border>

					<!--triggers-->
					<Border x:Name="triggerBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<UniformGrid Columns="2">
								<StackPanel HorizontalAlignment="Left">
									<TextBlock Text="Triggered By (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" Name="triggeredByCB" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerName}" SelectedValuePath="dataName" Margin="0,5,0,0" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}"/>
										<Button x:Name="addMainTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerButton_Click" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>

								<StackPanel HorizontalAlignment="Left" Margin="10,0,0,0">
									<TextBlock Text="Set Trigger After Event Is Resolved (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" HorizontalAlignment="Left" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerAfterName}" SelectedValuePath="dataName" Margin="0,5,0,0"/>
										<Button x:Name="addMainTriggerAfterButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerAfterButton_Click">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>
							</UniformGrid>
							<TextBlock Style="{StaticResource SubText}" Margin="0,5,0,0" TextWrapping="Wrap">
								Multiple Interactions can be 'Triggered By' the same Trigger. When this happens, only ONE of the Interactions will be randomly chosen to fire.
							</TextBlock>
						</StackPanel>
					</Border>

					<!--flavor text-->
					<Border x:Name="flavorbox" Style="{StaticResource callout}" Margin="0,10,0,0" Visibility="{Binding ElementName=isTokenCB,Path=IsChecked,Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Text="Flavor Text For Token Interaction" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when a player interacts with a Token. Use it to hint at the Event. If the player wishes to use an action to trigger the Event, they press a Continue button in the Companion App. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="flavorTB" Text="{Binding interaction.textBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>

					<!--event text-->
					<Border x:Name="eventbox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Text="Event Text" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					Use the Event Text to describe the actual Event that has been triggered. Example: Describe a Monster Threat, present a Test, describe a Decision, etc. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="eventTB" Text="{Binding interaction.eventBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editEventButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditEventButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>

			<TabItem Padding="5" Header="Story Branch">
				<StackPanel Margin="0,5,0,0">
					<TextBlock Style="{StaticResource SubText}" Text="A Story Branch is a special kind of Event that tests whether a specified Trigger has been set, then fires additional Triggers or Events based on the result." TextWrapping="Wrap"/>
					<Border Style="{StaticResource callout}" Margin="0,10,0,10">
						<StackPanel Orientation="Horizontal">
							<TextBlock Style="{StaticResource Heading}" Text="If this Trigger has been set..." Margin="0,0,10,0"/>

							<ComboBox x:Name="triggerCB" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding scenario.triggersObserver}" SelectedValuePath="dataName" SelectedValue="{Binding interaction.triggerTest}" DisplayMemberPath="dataName" MinWidth="200" SelectionChanged="triggerCB_SelectionChanged"/>

							<Button x:Name="addTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</Border>

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
						<RadioButton x:Name="eventTestRB" GroupName="branchrb"/>
						<Border Style="{StaticResource callout}" Width="679">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="...Fire One Of These Events"/>
								<UniformGrid Columns="2">
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Set (True)..." FontWeight="Normal">
										<ComboBox x:Name="eventTrue" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.interactionObserver}" SelectedValue="{Binding interaction.triggerIsSet}" SelectedValuePath="dataName" FontSize="12"/>
									</GroupBox>
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Not Set (False)..." FontWeight="Normal">
										<ComboBox x:Name="eventNotTrue" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.interactionObserver}" SelectedValue="{Binding interaction.triggerNotSet}" SelectedValuePath="dataName" FontSize="12"/>
									</GroupBox>
								</UniformGrid>
							</StackPanel>
						</Border>
					</StackPanel>

					<TextBlock Text="-OR-" Style="{StaticResource Heading}" HorizontalAlignment="Center" Margin="0,5"/>

					<StackPanel Orientation="Horizontal">
						<RadioButton x:Name="triggerTestRB" GroupName="branchrb"/>
						<Border Style="{StaticResource callout}" Width="679">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="...Set One Of These Triggers"/>
								<UniformGrid Columns="2">
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Set (True)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal">
											<ComboBox x:Name="eventTrueTrigger" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.triggerIsSetTrigger}" SelectedValuePath="dataName" FontSize="12" MinWidth="234"/>

											<Button x:Name="addTriggerButton2" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton2_Click">
												<Image Source="/JiME;component/Assets/add2.png"/>
											</Button>

										</StackPanel>
									</GroupBox>
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Not Set (False)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal">
											<ComboBox x:Name="eventNotTrueTrigger" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.triggerNotSetTrigger}" SelectedValuePath="dataName" FontSize="12" MinWidth="234"/>

											<Button x:Name="addTriggerButton3" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton3_Click">
												<Image Source="/JiME;component/Assets/add2.png"/>
											</Button>
										</StackPanel>

									</GroupBox>
								</UniformGrid>
							</StackPanel>
						</Border>
					</StackPanel>
				</StackPanel>
			</TabItem>
		</TabControl>

		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</StackPanel>
</Window>
