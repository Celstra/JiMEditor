<Window x:Class="JiME.Views.ThreatInteractionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        ContentRendered="Window_ContentRendered"
        Title="Enemy Event Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="750" Closing="Window_Closing">

	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="bvis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<Style TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Margin" Value="0,5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
	</Window.Resources>

	<StackPanel>
		<TabControl Margin="10" Background="#FF2D2D30" BorderThickness="0,1,0,0">

			<!--general properties-->
			<TabItem Header="General Properties" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}" Visibility="{Binding isThreatTriggered, Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="This Event is triggered by a Scenario Threat Threshold." HorizontalAlignment="Center"/>

							<TextBlock Style="{StaticResource SubText}" HorizontalAlignment="Center">
								Events triggered by Threat Thresholds cannot be Token Interactions and cannot be Triggered By another source.
							</TextBlock>

						</StackPanel>
					</Border>

					<!--event name/lore-->
					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<UniformGrid Columns="2">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="Event Name:"/>
								<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
								</TextBlock>
								<TextBox x:Name="nameTB" Text="{Binding interaction.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" TextChanged="nameTB_TextChanged"/>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Lore Reward:"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.loreReward}"/>
									<TextBlock Text="For Threat Events, Lore is only rewarded after all threats have been defeated." Style="{StaticResource SubText}" Margin="10,0" VerticalAlignment="Center" TextWrapping="Wrap" Width="217"/>
								</StackPanel>
							</StackPanel>

							<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
								<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
								<StackPanel Margin="10,0,0,0">
									<TextBlock Style="{StaticResource SubText}" Text="You can place this Event into a Random Interaction Group." TextWrapping="Wrap" VerticalAlignment="Center" Width="290"/>
									<TextBlock x:Name="groupInfo" Margin="0,5,0,0" Style="{StaticResource SubText}" Text="This Event is in the following group: None"/>
								</StackPanel>
							</StackPanel>
						</UniformGrid>
					</Border>

					<!--token interaction-->
					<Border x:Name="isEventBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<CheckBox x:Name="isTokenCB" Content="This Event is a Token Interaction" Foreground="White" IsChecked="{Binding interaction.isTokenInteraction}" VerticalAlignment="Center" Click="isTokenCB_Click"/>
								<Button x:Name="tokenHelp" Background="#FFC98800" Click="tokenHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
								<TextBlock Width="455" FontWeight="Bold" Text="IMPORTANT: Threat Events that are NOT Token Interactions will be randomly placed on an existing, explored tile. If that fails, the Event is discarded." TextWrapping="Wrap" Style="{StaticResource SubText}" VerticalAlignment="Center" Margin="10,0,0,0"/>
							</StackPanel>

							<StackPanel x:Name="tokenTypeBox" Orientation="Horizontal"  Visibility="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource bvis}}">
								<TextBlock Style="{StaticResource Heading}" Text="Token Type:" Margin="0,0,10,0"/>
								<RadioButton x:Name="personRadio" Content="Person" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="searchRadio" Content="Search" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="threatRadio" Content="Threat" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="darkRadio" Content="Darkness" Click="tokenTypeClick"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" Name="personType" Visibility="Collapsed">
								<TextBlock Text="Person Type:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
								<RadioButton x:Name="humanRadio" Content="Human" Margin="0,0,20,0"/>
								<RadioButton x:Name="elfRadio" Content="Elf" Margin="0,0,20,0"/>
								<RadioButton x:Name="hobbitRadio" Content="Hobbit" Margin="0,0,20,0"/>
								<RadioButton x:Name="dwarfRadio" Content="Dwarf"/>
							</StackPanel>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
							Token Interactions are triggered by players as they journey across the map. When a player clicks a Token, the Flavor Text below is shown. The player can decide to use an Action to Interact with the Token, after which the Event Text is shown, along with the Event itself.
							</TextBlock>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
								If this Token Interaction Event has already been assigned to a <Bold>Token</Bold> in the Tile Editor and you uncheck the Token Interaction setting above, that Token's <Italic>Token Interaction Trigger</Italic> will automatically be set to <Italic>None</Italic> because this Event will no longer be a Token Interaction.
							</TextBlock>
						</StackPanel>
					</Border>

					<!--triggers-->
					<Border x:Name="triggerBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<UniformGrid Columns="2">
								<StackPanel HorizontalAlignment="Left">
									<TextBlock Text="Triggered By (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" Name="triggeredByCB" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerName}" SelectedValuePath="dataName" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}"/>
										<Button x:Name="addMainTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerButton_Click" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>

								<StackPanel HorizontalAlignment="Left" Margin="10,0,0,0">
									<TextBlock Text="Set Trigger After Event Is Resolved (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" HorizontalAlignment="Left" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerAfterName}" SelectedValuePath="dataName"/>
										<Button x:Name="addMainTriggerAfterButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerAfterButton_Click">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>
							</UniformGrid>
							<TextBlock Style="{StaticResource SubText}" Margin="0,5,0,0" TextWrapping="Wrap">
								Multiple Events can be 'Triggered By' the same Trigger. When this happens, only ONE of the Interactions will be randomly chosen to fire.
							</TextBlock>
							<TextBlock Style="{StaticResource SubText}" Margin="0,5,0,0" TextWrapping="Wrap">
								<Bold>Note:</Bold> The <Bold>Set Trigger After Event Is Resolved</Bold> Trigger above fires immediately after the Enemies in this Threat Event are <Bold>spawned</Bold>, NOT after they have been defeated. Use the setting on the <Bold>Enemy Groups</Bold> tab to select a Trigger to fire when the Enemies are <Bold>defeated.</Bold>
							</TextBlock>
						</StackPanel>
					</Border>

					<!--flavor text-->
					<Border x:Name="flavorbox" Style="{StaticResource callout}" Margin="0,10,0,0" Visibility="{Binding ElementName=isTokenCB,Path=IsChecked,Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Text="Flavor Text For Token Interaction" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when a player interacts with a Token. Use it to hint at the Event. If the player wishes to use an action to trigger the Event, they press a Continue button in the Companion App. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="flavorTB" Text="{Binding interaction.textBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>

					<!--event text-->
					<Border x:Name="eventbox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Text="Event Text" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					Use the Event Text to describe the actual Event that has been triggered. Example: Describe an Enemy Threat, present a Test, describe a Decision, etc. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="eventTB" Text="{Binding interaction.eventBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editEventButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditEventButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>

			<TabItem Padding="5" Header="Enemy Groups">
				<StackPanel Margin="0,5,0,0" HorizontalAlignment="Stretch">
					<Grid Margin="0,0,0,10">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
						<Bold>Scripted Enemy Groups</Bold> allow you to design unique, non-standard Enemies with your own values for Health, Damage/Fear and Elite Modifiers. The <Bold>Enemy Pool System</Bold> automates the creation of Enemy Events that are random yet balanced, and automatically scale with Player Count and Game Difficulty.
						</TextBlock>

						<Button HorizontalAlignment="Right" Grid.Column="1" x:Name="help" Background="#FFC98800" Height="32"  Click="help_Click" Margin="10,0,0,0">
							<StackPanel Orientation="Horizontal">
								<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								<TextBlock Text="Event Help" Style="{StaticResource Heading}" Margin="5,0,0,0"/>
							</StackPanel>
						</Button>
					</Grid>

					<Button x:Name="addMonsterButton" Background="MediumSeaGreen"  HorizontalAlignment="Left" Margin="0,0,0,10" Click="AddMonsterButton_Click">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Add Scripted Enemy Group" Style="{StaticResource Heading}" VerticalAlignment="Center" Margin="0,0,5,0"/>
							<Image Source="/JiME;component/Assets/add2.png" Height="24"/>
						</StackPanel>
					</Button>

					<!--items-->
					<ItemsControl ItemsSource="{Binding interaction.monsterCollection}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel IsItemsHost="True"/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Border Style="{StaticResource callout}" Margin="0,2">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="auto"/>
										</Grid.ColumnDefinitions>

										<WrapPanel VerticalAlignment="Center">
											<WrapPanel.Resources>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground" Value="Silver"/>
													<Setter Property="VerticalAlignment" Value="Center"/>
												</Style>
												<Style TargetType="Image">
													<Setter Property="Margin" Value="5,0,5,0"/>
												</Style>
											</WrapPanel.Resources>
											<TextBlock Text="{Binding dataName}" Style="{StaticResource Heading}"/>
											<Border Width="32" Height="32" Margin="10,0" BorderThickness="2" BorderBrush="White" CornerRadius="50">
												<TextBlock Text="{Binding count}" Style="{StaticResource Heading}" HorizontalAlignment="Center"/>
											</Border>
											<Border Width="32" Height="32">
												<Border.Background>
													<ImageBrush ImageSource="/JiME;component/Assets/health.png" Stretch="UniformToFill"/>
												</Border.Background>
												<TextBlock Text="{Binding health}" Style="{StaticResource Heading}" HorizontalAlignment="Center" Margin="0,0,0,4"/>
											</Border>
											<!--<Image Source="/JiME;component/Assets/add2.png" Height="32" Margin="20,0,0,0"/>-->
											<TextBlock Text="{Binding bonuses}" Margin="20,0,0,0"/>
											<Image Source="/JiME;component/Assets/damage.png" Height="32" Margin="20,0,0,0"/>
											<TextBlock Text="/" Margin="5,0,0,0"/>
											<Image Source="/JiME;component/Assets/fear.png" Height="32"/>
											<TextBlock Text="{Binding damage}"/>
											<TextBlock Style="{StaticResource Heading}" Text="Elite" Margin="15, 0, 0, 0" Visibility="{Binding isElite,Converter={StaticResource bvis}}" Foreground="Red"/>
											<TextBlock Margin="10,0"/>
											<!--difficulty-->
											<Border Width="16" Height="16" BorderThickness="2" BorderBrush="White" Background="Green" Visibility="{Binding isEasy, Converter={StaticResource bvis}}"/>
											<Border Width="16" Height="16" BorderThickness="2" BorderBrush="White" Background="Yellow" Visibility="{Binding isNormal, Converter={StaticResource bvis}}"/>
											<Border Width="16" Height="16" BorderThickness="2" BorderBrush="White" Background="Red" Visibility="{Binding isHard, Converter={StaticResource bvis}}"/>
										</WrapPanel>

										<StackPanel Orientation="Horizontal" Grid.Column="1">
											<Button x:Name="editButton" Background="CornflowerBlue" Click="EditButton_Click" IsDefault="True" Width="40" Height="40" Margin="5,0" DataContext="{Binding}">
												<Image Source="/JiME;component/Assets/edit.png" Stretch="Uniform" />
											</Button>
											<Button x:Name="deleteButton" Background="{StaticResource bgCancelDelete}" Click="DeleteButton_Click" IsDefault="True" Width="40" Height="40" DataContext="{Binding}">
												<Image Source="/JiME;component/Assets/remove.png" Stretch="Uniform" />
											</Button>
										</StackPanel>
									</Grid>
								</Border>

							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

					<!--pool-->
					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<StackPanel>
									<TextBlock Text="Enemy Pool System" Style="{StaticResource Heading}"/>
									<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" VerticalAlignment="Top">
								The <Bold>Enemy Pool</Bold> guides the Companion App in generating random, balanced encounters for this Event.
									</TextBlock>
								</StackPanel>
							</Grid>

							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

							</Grid>

							<!--pool points-->
							<Grid Margin="0,5,0,10">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<StackPanel Orientation="Horizontal" Margin="0,0,0,5">
									<TextBlock Style="{StaticResource Heading}" Text="Base Pool Points:" Margin="0,0,10,0"/>
									<TextBox x:Name="poolPointsBox"  Width="32" VerticalAlignment="Center" Text="{Binding interaction.basePoolPoints}"/>
								</StackPanel>
								<TextBlock Grid.Column="1" Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="10,0,0,0">
									This value provides a baseline for determining the difficulty of the Enemies generated for this Event.  It defaults to 10, representing <Bold>1 Hero at Normal Difficulty</Bold>, and is automatically scaled by Easy/Hard Difficulty and additional Heroes in the Companion App. See <Bold>Event Help</Bold> for details.
								</TextBlock>
							</Grid>

							<!--bias-->
							<StackPanel Orientation="Horizontal">
								<TextBlock Style="{StaticResource Heading}" Text="Difficulty Bias:"/>
								<RadioButton x:Name="biasLight" Content="Light (+3/Hero)" Margin="10,5" GroupName="bias"/>
								<RadioButton x:Name="biasMedium" Content="Medium (+5/Hero)" GroupName="bias"/>
								<RadioButton x:Name="biasHeavy" Content="Heavy (+7/Hero)" Margin="10,0" GroupName="bias"/>
							</StackPanel>

							<TextBlock Text="Difficulty Bias changes how the Companion App increases the Pool Points based on Hero Counts above 1." TextWrapping="Wrap" Style="{StaticResource SubText}"/>

							<TextBlock Style="{StaticResource Heading}" Text="Include These Enemies (Point Value in Parentheses):" Margin="0,10,0,5"/>

							<StackPanel Orientation="Horizontal">
								<CheckBox x:Name="rufCB" Content="Ruffian (3)" Foreground="White"/>
								<CheckBox x:Name="gobCB" Content="Goblin Scout (3)" Foreground="White" Margin="15,0"/>
								<CheckBox x:Name="huntCB" Content="Orc Hunter (6)" Foreground="White"/>
								<CheckBox x:Name="marCB" Content="Orc Marauder (6)" Foreground="White" Margin="15,0"/>
								<CheckBox x:Name="wargCB" Content="Warg (7)" Foreground="White"/>
								<CheckBox x:Name="wightCB" Content="Wight (7)" Foreground="White" Margin="15,0"/>
								<CheckBox x:Name="hTrollCB" Content="Hill Troll (9)" Foreground="White"/>
							</StackPanel>

							<TextBlock Text="The Companion App will randomly spend the Base Pool Points to create Enemy Groups using the Enemies you check above."  Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0"/>

							<Button x:Name="simulateBtn" Click="simulateBtn_Click" Content="Simulate..." HorizontalAlignment="Left" Margin="0,10,0,0" Background="MediumSeaGreen" Foreground="White"/>
						</StackPanel>
					</Border>

					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Text="When All Threats Have Been Defeated, Fire This Trigger (Optional):" Style="{StaticResource Heading}"/>
							<StackPanel Orientation="Horizontal">
								<ComboBox VerticalAlignment="Center" HorizontalAlignment="Left" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerDefeatedName}" SelectedValuePath="dataName"/>
								<Button x:Name="addDefeatedTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addDefeatedTriggerButton_Click">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
								In the General Properties, the <Bold>Set Trigger After Event Is Resolved</Bold> Trigger fires immediately after this Enemy Threat is <Bold>spawned</Bold>, NOT after it's defeated. Set the Trigger above to fire when the Threat is <Bold>defeated</Bold>.
							</TextBlock>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>
		</TabControl>

		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</StackPanel>
</Window>
