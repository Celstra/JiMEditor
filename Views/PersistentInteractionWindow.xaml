<Window x:Class="JiME.Views.PersistentInteractionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        ContentRendered="Window_ContentRendered"
        Title="Persistent Event Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="750" Closing="Window_Closing">

	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="bvis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<Style TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Margin" Value="0,5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
	</Window.Resources>

	<StackPanel>
		<TabControl Margin="10" Background="#FF2D2D30" BorderThickness="0,1,0,0">

			<!--general properties-->
			<TabItem Header="General Properties" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}" Visibility="{Binding isThreatTriggered, Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="This Event is triggered by a Scenario Threat Threshold." HorizontalAlignment="Center"/>

							<TextBlock Style="{StaticResource SubText}" HorizontalAlignment="Center">
								Events triggered by Threat Thresholds cannot be Token Interactions and cannot be Triggered By another source.
							</TextBlock>

						</StackPanel>
					</Border>

					<!--event name/lore-->
					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<UniformGrid Columns="2">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="Event Name:"/>
								<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
								</TextBlock>
								<TextBox x:Name="nameTB" Text="{Binding interaction.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" TextChanged="nameTB_TextChanged"/>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Lore Reward:"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.loreReward}"/>
								</StackPanel>
							</StackPanel>

							<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
								<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
								<StackPanel Margin="10,0,0,0">
									<TextBlock Style="{StaticResource SubText}" Text="You can place this Event into an Interaction Group for use on randomly generated Tiles." TextWrapping="Wrap" VerticalAlignment="Center" Width="290"/>
									<TextBlock x:Name="groupInfo" Margin="0,5,0,0" Style="{StaticResource SubText}" Text="This Event is in the following group: None"/>
								</StackPanel>
							</StackPanel>
						</UniformGrid>
					</Border>

					<!--token interaction-->
					<Border x:Name="isEventBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<CheckBox x:Name="isTokenCB" Content="This Event is a Token Interaction" Foreground="White" IsChecked="{Binding interaction.isTokenInteraction}" VerticalAlignment="Center" Click="isTokenCB_Click" IsEnabled="False"/>
								<Button x:Name="tokenHelp" Background="#FFC98800" Click="tokenHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
								<TextBlock Style="{StaticResource SubText}" Text="IMPORTANT: Persistent Events are required to be Token Interactions. Specify a Token Type below." VerticalAlignment="Center" Margin="10,0,0,0" TextWrapping="Wrap" Width="432" FontWeight="Bold"/>
							</StackPanel>

							<StackPanel x:Name="tokenTypeBox" Orientation="Horizontal" Visibility="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource bvis}}">
								<TextBlock Style="{StaticResource Heading}" Text="Token Type:" Margin="0,0,10,0"/>
								<RadioButton x:Name="personRadio" Content="Person" Margin="0,0,20,0"/>
								<RadioButton x:Name="searchRadio" Content="Search" Margin="0,0,20,0"/>
								<RadioButton x:Name="threatRadio" Content="Threat" Margin="0,0,20,0"/>
								<RadioButton x:Name="darkRadio" Content="Darkness"/>
							</StackPanel>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
							Token Interactions are triggered by players as they journey across the map. When a player clicks a Token, the Flavor Text below is shown. The player can decide to use an Action to Interact with the Token, after which the Event Text is shown, along with the Event itself.
							</TextBlock>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
								If this Token Interaction Event has already been assigned to a <Bold>Token</Bold> in the Tile Editor and you uncheck the Token Interaction setting above, that Token's <Italic>Token Interaction Trigger</Italic> will automatically be set to <Italic>None</Italic> because this Event will no longer be a Token Interaction.
							</TextBlock>
						</StackPanel>
					</Border>

					<!--triggers-->
					<Border x:Name="triggerBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<UniformGrid Columns="2">
								<!--<StackPanel HorizontalAlignment="Left">
									<TextBlock Text="Triggered By (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" Name="triggeredByCB" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerName}" SelectedValuePath="dataName" Margin="0" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}"/>
										<Button x:Name="addMainTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerButton_Click" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>-->

								<StackPanel HorizontalAlignment="Left" Margin="0,0,0,0">
									<TextBlock Text="Triggered By and Set Trigger After:" Style="{StaticResource Heading}"/>
									<!--<TextBlock Text="Since Persistent Events delegate the player's Action to another Event, there is no 'Trigger After...' Trigger." TextWrapping="Wrap" Style="{StaticResource SubText}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" HorizontalAlignment="Left" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerAfterName}" SelectedValuePath="dataName" Margin="0"/>
										<Button x:Name="addMainTriggerAfterButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerAfterButton_Click">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>-->
								</StackPanel>
							</UniformGrid>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
								Since Persistent Events delegate the player's Action to another Event, there are no 'Triggered By' or 'Trigger After...' Triggers.
							</TextBlock>
						</StackPanel>
					</Border>
					<!--flavor text-->
					<Border x:Name="flavorbox" Style="{StaticResource callout}" Margin="0,10,0,0" Visibility="{Binding ElementName=isTokenCB,Path=IsChecked,Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Text="Flavor Text For Token Interaction" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when a player interacts with a Token. Use it to hint at the Event. If the player wishes to use an action to trigger the Event, they press a Continue button in the Companion App. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="flavorTB" Text="{Binding interaction.textBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>

					<!--event text-->
					<Border x:Name="eventbox" Style="{StaticResource callout}" Margin="0,10,0,0" IsEnabled="False">
						<StackPanel>
							<TextBlock Text="Event Text" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
								The Event Text is not used for Persistent Events. Instead, when players activate this Event's Token by using their Action, the Event specified in the <Bold>Persistent Event</Bold> tab is activated instead, along with its own Event Text.
							</TextBlock>
							<Grid Visibility="Collapsed">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="eventTB" Text="{Binding interaction.eventBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editEventButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditEventButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>

			<!--persistent-->
			<TabItem Header="Persistent Event" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<TextBlock Style="{StaticResource SubText}" VerticalAlignment="Center" TextWrapping="Wrap">
						Persistent Events are <Bold>Token Interaction Events</Bold> whose Token stays on the tile even after being activated. They act like a relay, and delegate the player's Action to the "real" Event set below.
					</TextBlock>

					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="When Players Use an Action to Explore this Event's Token, Activate The Event Below (Required):"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
								This is the Event that this Persistent Event delegates its Action to. Only Events that are NOT <Bold>Token Interactions</Bold> can be selected below. The Event you select here will only be activated ONCE when the players use an Action to fully Explore this Event's Token.
							</TextBlock>
							<ComboBox x:Name="eventCB" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding interactionObserver}" SelectedValue="{Binding interaction.eventToActivate}" MinWidth="200" Margin="0,5,0,0" SelectionChanged="eventCB_SelectionChanged"/>
						</StackPanel>
					</Border>

					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="Alternative Flavor Text Trigger (Required):"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
								When the Trigger below is fired, the Alternative Flavor Text will be shown when players interact with this Event's Token, instead of the normal Flavor Text in the General Properties tab.
							</TextBlock>
							<StackPanel Orientation="Horizontal" Margin="0,5,0,0">
								<ComboBox x:Name="triggerCB" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.alternativeTextTrigger}" SelectedValuePath="dataName" DisplayMemberPath="dataName" MinWidth="200"/>
								<Button x:Name="addAltTrigger" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addAltTrigger_Click">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>
						</StackPanel>
					</Border>

					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="Alternative Flavor Text"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					Normally, when players inspect this Event's Token, the Flavor Text in the General Properties tab will be shown. After the Trigger above has been set, the Alternative Flavor Text will be shown instead, <Bold>persistently every time</Bold>. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="altTB" Text="{Binding interaction.alternativeBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editAltButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="editAltButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>
		</TabControl>


		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</StackPanel>
</Window>
