<Window x:Class="JiME.Views.EventEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
				xmlns:local="clr-namespace:JiME" ContentRendered="Window_ContentRendered"
        Title="Event Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="725" Closing="Window_Closing">

	<Window.Resources>
		<local:TabEnabledConverter x:Key="tabconv"/>
		<BooleanToVisibilityConverter x:Key="bvis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<Style TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<!--<Setter Property="Margin" Value="10,0"/>-->
			<Setter Property="Margin" Value="0,5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
	</Window.Resources>

	<StackPanel>
		<TabControl Margin="10" Background="#FF2D2D30" BorderThickness="0,1,0,0">

			<!--general properties-->
			<TabItem Header="General Properties" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}" Visibility="{Binding interaction.isFromThreatThreshold, Converter={StaticResource bvis}}">
						<TextBlock Style="{StaticResource Heading}" Text="This Event is triggered by a Scenario Threat Threshold." HorizontalAlignment="Center"/>
					</Border>

					<UniformGrid Columns="2" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="Event Name:"/>
							<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<TextBox x:Name="nameTB" Text="{Binding interaction.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left"/>
						</StackPanel>

						<Border x:Name="isRandomBox" Style="{StaticResource callout}">
							<StackPanel>
								<CheckBox x:Name="randomCB" Content="This Event is Random" Foreground="White" IsChecked="{Binding interaction.isRandom}" Click="RandomCB_Click"/>
								<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
							Random Events are placed in a pool to be drawn from during the course of the game, usually activated by the built-in Random Event Trigger. They are only fired once unless it's a Monster Threat with Recycle checked.
								</TextBlock>
							</StackPanel>
						</Border>
					</UniformGrid>

					<Border x:Name="isEventBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<CheckBox x:Name="isTokenCB" Content="This Event is a Token Interaction" Foreground="White" IsChecked="{Binding interaction.isTokenInteraction}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
							Token Interactions are triggered by players as they journey across the map. When a player clicks a Token, the Flavor Text is shown. The player can decide to use an Action to Interact with the Token, after which the Event Text is shown, along with the Event itself.
							</TextBlock>
						</StackPanel>
					</Border>

					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Text="Event Type (Required):" Style="{StaticResource Heading}"/>
							<UniformGrid VerticalAlignment="Center" Columns="5">
								<RadioButton x:Name="textRB" Content="Text Popup" GroupName="type" Click="RB_Click"/>
								<RadioButton x:Name="threatRB" Content="Monster Threat" GroupName="type" Click="RB_Click"/>
								<RadioButton x:Name="testRB" Content="Attribute Test" GroupName="type" Click="RB_Click"/>
								<RadioButton x:Name="decisionRB" Content="Decision" GroupName="type" Click="RB_Click"/>
								<RadioButton x:Name="branchRB" Content="Story Branch" GroupName="type" Click="RB_Click"/>
							</UniformGrid>
						</StackPanel>
					</Border>

					<!--triggers-->
					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<UniformGrid Columns="2">
							<StackPanel HorizontalAlignment="Left">
								<TextBlock Text="Triggered By (Required):" Style="{StaticResource Heading}"/>
								<ComboBox Name="triggeredByCB" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerName}" SelectedValuePath="dataName" Margin="0,5,0,0" HorizontalAlignment="Left" SelectionChanged="ComboBox_SelectionChanged" IsEnabled="{Binding ElementName=randomCB, Path=IsChecked, Converter={StaticResource binv}}"/>
							</StackPanel>

							<StackPanel HorizontalAlignment="Left" Margin="10,0,0,0">
								<TextBlock Text="Set Trigger After Event Is Resolved (Optional):" Style="{StaticResource Heading}"/>
								<ComboBox HorizontalAlignment="Left" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerAfterName}" SelectedValuePath="dataName" Margin="0,5,0,0"/>
							</StackPanel>
						</UniformGrid>
					</Border>

					<!--flavor text-->
					<Border x:Name="flavorbox" Style="{StaticResource callout}" Margin="0,10,0,0" Visibility="{Binding ElementName=isTokenCB,Path=IsChecked,Converter={StaticResource bvis}}">
						<StackPanel>
							<TextBlock Text="Flavor Text For Token Interaction" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when a player interacts with a Token. Use it to hint at the Event. If the player wishes to use an action to trigger the Event, they press a Continue button in the Companion App. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="flavorTB" Text="{Binding interaction.textBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>

					<!--event text-->
					<Border x:Name="eventbox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Text="Event Text" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					Use the Event Text to describe the Event that has been triggered. Example: Describe a Monster Threat, present a Test, describe a Decision, etc. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
									<TextBlock x:Name="eventTB" Text="{Binding interaction.eventBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/>
								</Border>
								<Button Grid.Column="1" x:Name="editEventButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditEventButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>

			<!--monster props-->
			<TabItem Padding="5" Header="Monster Threat" IsEnabled="{Binding ElementName=threatRB, Path=IsChecked}">
				<StackPanel Margin="0,5,0,0" HorizontalAlignment="Stretch">
					<Button x:Name="addMonsterButton" Background="MediumSeaGreen" Height="46" Width="170" HorizontalAlignment="Left" Margin="0,0,0,10" Click="AddMonsterButton_Click">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Add Monster" Style="{StaticResource ButtonHeading}" Margin="0,0,10,0"/>
							<Image Source="/JiME;component/Assets/add2.png"/>
						</StackPanel>
					</Button>

					<!--items-->
					<ItemsControl ItemsSource="{Binding interaction.monsterCollection}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel IsItemsHost="True"/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Border Style="{StaticResource callout}" Margin="0,2">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="auto"/>
										</Grid.ColumnDefinitions>

										<WrapPanel VerticalAlignment="Center">
											<WrapPanel.Resources>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground" Value="Silver"/>
													<Setter Property="VerticalAlignment" Value="Center"/>
												</Style>
												<Style TargetType="Image">
													<Setter Property="Margin" Value="20,0,5,0"/>
												</Style>
											</WrapPanel.Resources>
											<TextBlock Text="{Binding dataName}" Style="{StaticResource Heading}"/>
											<Border Width="32" Height="32" Margin="10,0" BorderThickness="2" BorderBrush="White" CornerRadius="50">
												<TextBlock Text="{Binding count}" Style="{StaticResource Heading}" HorizontalAlignment="Center"/>
											</Border>
											<Image Source="/JiME;component/Assets/health.png" Height="32"/>
											<TextBlock Text="{Binding health}"/>
											<Image Source="/JiME;component/Assets/add2.png" Height="32"/>
											<TextBlock Text="{Binding bonuses}"/>
											<Image Source="/JiME;component/Assets/damage.png" Height="32"/>
											<TextBlock Text="{Binding damage}"/>
											<Image Source="/JiME;component/Assets/fear.png" Height="32"/>
											<TextBlock Text="{Binding fear}"/>
										</WrapPanel>

										<StackPanel Orientation="Horizontal" Grid.Column="1">
											<Button x:Name="editButton" Background="CornflowerBlue" Click="EditButton_Click" IsDefault="True" Width="40" Height="40" Margin="5,0" DataContext="{Binding}">
												<Image Source="/JiME;component/Assets/edit.png" Stretch="Uniform" />
											</Button>
											<Button x:Name="deleteButton" Background="{StaticResource bgCancelDelete}" Click="DeleteButton_Click" IsDefault="True" Width="40" Height="40" DataContext="{Binding}">
												<Image Source="/JiME;component/Assets/remove.png" Stretch="Uniform" />
											</Button>
										</StackPanel>
									</Grid>
								</Border>

							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

					<CheckBox Content="Recycle" Foreground="White" IsChecked="{Binding interaction.isReuseable}" IsEnabled="{Binding interaction.isRandom}"/>
					<TextBlock Style="{StaticResource SubText}" Text="If this Event is Random, Monster Threats can be Recycled. A Recycled Monster Threat can be triggered multiple times out of the random event pool, instead of just once." TextWrapping="Wrap"/>
				</StackPanel>
			</TabItem>

			<!--atribute test-->
			<TabItem Padding="5" Header="Attribute Test" IsEnabled="{Binding ElementName=testRB, Path=IsChecked}">
				<StackPanel Margin="0,5,0,0">
					<TextBlock Style="{StaticResource SubText}" Text="For Attribute Tests, two buttons (labeled 'Pass' and 'Fail') will be presented to the player. The result of the test may be entered within the Companion App." VerticalAlignment="Center" TextWrapping="Wrap" />

					<!--attributes-->
					<Border Style="{StaticResource callout}" Margin="0,10,0,5">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Style="{StaticResource Heading}" Text="Test Attribute:" Margin="0,0,10,0"/>
								<RadioButton x:Name="mightRB" Content="Might"/>
								<RadioButton x:Name="agilityRB" Content="Agility" Margin="10,5,0,5"/>
								<RadioButton x:Name="spiritRB" Content="Spirit" Margin="10,5,0,5"/>
								<RadioButton x:Name="wisdomRB" Content="Wisdom" Margin="10,5,0,5"/>
								<RadioButton x:Name="witRB" Content="Wit" Margin="10,5,0,5"/>
								<Rectangle Width="125"/>
							</StackPanel>
							<CheckBox IsChecked="{Binding interaction.isCumulative}" Content="Cumulative" Foreground="White"/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="A Cumulative Test can be attempted any number of times, with each score added to the previous score. When the Success Value is finally reached, it's considered a Success. A Cumulative Test cannot be Failed."/>
						</StackPanel>
					</Border>

					<!--test value-->
					<Border Style="{StaticResource callout}" Margin="0,5,0,0">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="Success Value:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
								<TextBox Text="{Binding interaction.successValue}" Width="50" Style="{StaticResource DefaultTextBox}"/>
								<Button x:Name="editPass" Background="MediumSeaGreen" Margin="25,0,10,0" Height="40" Click="EditPass_Click">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Pass Text" Style="{StaticResource ButtonHeading}" Margin="5,0"/>
										<Image Source="/JiME;component/Assets/edit.png" Margin="5,0"/>
									</StackPanel>
								</Button>

								<Button x:Name="editFail" Background="{StaticResource bgCancelDelete}" Margin="5,0" Height="40" Click="EditFail_Click">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Fail Text" Style="{StaticResource ButtonHeading}" Margin="5,0"/>
										<Image Source="/JiME;component/Assets/edit.png" Margin="5,0"/>
									</StackPanel>
								</Button>

								<Button x:Name="editProgress" Background="YellowGreen" Margin="10,0" Height="40" Click="EditProgress_Click">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Progress Text" Style="{StaticResource ButtonHeading}" Margin="5,0"/>
										<Image Source="/JiME;component/Assets/edit.png" Margin="5,0"/>
									</StackPanel>
								</Button>
							</StackPanel>
							<TextBlock Style="{StaticResource SubText}" Text="The Success Value is the threshold that must be reached for the Test to be a Success."/>
							<TextBlock Style="{StaticResource SubText}" Margin="0,5" TextWrapping="Wrap" Text="Pass Text is shown when the test succeeds. Fail Text is shown if the player fails the test. Progress Text is only shown if the Cumulative option is checked and the current value is greater than 0 but less than the Success Value for completion. Use it as a way to indicate progress towards competing the Test."/>
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					Progress Text example: <Italic>Almost there! Just a few more swings and the lock will be broken.</Italic>
							</TextBlock>
						</StackPanel>
					</Border>

					<!--triggers-->
					<UniformGrid Columns="2" Margin="0,10,0,0">
						<StackPanel Margin="0,0,5,0">
							<TextBlock Text="Trigger On Pass (Required):" Style="{StaticResource Heading}"/>
							<StackPanel Orientation="Horizontal">
								<ComboBox ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.successTrigger}" SelectedValuePath="dataName" DisplayMemberPath="dataName" Margin="0,5,0,0" MinWidth="200"/>
								<Button x:Name="addTriggerPassButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerPassButton_Click">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>
						</StackPanel>
						<StackPanel Margin="5,0,0,0">
							<TextBlock Text="Trigger On Fail (Required):" Style="{StaticResource Heading}"/>
							<StackPanel Orientation="Horizontal">
								<ComboBox ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.failTrigger}" SelectedValuePath="dataName" DisplayMemberPath="dataName" Margin="0,5,0,0" MinWidth="200"/>
								<Button x:Name="addTriggerFailButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerFailButton_Click">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>
						</StackPanel>
					</UniformGrid>
				</StackPanel>
			</TabItem>

			<!--Decision-->
			<TabItem Padding="5" Header="Decision" IsEnabled="{Binding ElementName=decisionRB, Path=IsChecked}">
				<StackPanel Margin="0,5,0,0">
					<TextBlock Style="{StaticResource SubText}" Text="Decisions are Events that present a choice to the player. Use the Event Text from the General Properties page to describe the choices. When the player is presented with this Decision Event in the Companion App, buttons labeled with the choices below will be presented along with the Event Text in the General Properties tab. Decision Events can have 2 or 3 choices to select from. These labels appear on the buttons presented to the player, so keep them very short." VerticalAlignment="Center" TextWrapping="Wrap" />
					<Border Style="{StaticResource callout}" Margin="0,5" HorizontalAlignment="Left">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Style="{StaticResource Heading}" Text="First Choice:" Margin="0,0,10,0"/>
								<TextBox Style="{StaticResource DefaultTextBox}" Width="100" Text="{Binding interaction.choice1}"/>
								<TextBlock Style="{StaticResource Heading}" Text="Set This Trigger (Required):" Margin="10,0,5,0"/>
								<ComboBox ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.choice1Trigger}" SelectedValuePath="dataName" VerticalAlignment="Center" MinWidth="200"/>
								<Button x:Name="addTrigger1Button" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTrigger1Button_Click">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>

							<StackPanel Orientation="Horizontal" Margin="0,5,0,0">
								<TextBlock Style="{StaticResource Heading}" Text="Second Choice:" Margin="0,0,10,0"/>
								<TextBox Style="{StaticResource DefaultTextBox}" Width="100" Text="{Binding interaction.choice2}"/>
								<TextBlock Style="{StaticResource Heading}" Text="Set This Trigger (Required):" Margin="10,0,5,0"/>
								<ComboBox ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.choice2Trigger}" SelectedValuePath="dataName" VerticalAlignment="Center" MinWidth="200"/>
								<Button x:Name="addTrigger2Button" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTrigger2Button_Click">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>

						</StackPanel>
					</Border>

					<Border Style="{StaticResource callout}" HorizontalAlignment="Left">
						<StackPanel Orientation="Horizontal">
							<CheckBox x:Name="choice3" Content="Third Choice:" Foreground="White" Margin="0,0,10,0" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" IsChecked="{Binding interaction.isThreeChoices}"/>
							<TextBox Style="{StaticResource DefaultTextBox}" Width="100" Text="{Binding interaction.choice3}" IsEnabled="{Binding ElementName=choice3,Path=IsChecked}"/>
							<TextBlock Style="{StaticResource Heading}" Text="Set This Trigger (Required):" Margin="10,0,5,0"/>
							<ComboBox ItemsSource="{Binding scenario.triggersObserver}" IsEnabled="{Binding ElementName=choice3,Path=IsChecked}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.choice3Trigger}" SelectedValuePath="dataName" VerticalAlignment="Center" MinWidth="200"/>
							<Button x:Name="addTrigger3Button" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTrigger3Button_Click" IsEnabled="{Binding ElementName=choice3,Path=IsChecked}">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>

			<!--Story Branch-->
			<TabItem Padding="5" Header="Story Branch" IsEnabled="{Binding ElementName=branchRB, Path=IsChecked}">
				<StackPanel Margin="0,5,0,0">
					<TextBlock Style="{StaticResource SubText}" Text="A Story Branch is a special kind of Event that tests whether a specified Trigger has been set, then fires additional Triggers or Events based on the result." TextWrapping="Wrap"/>
					<Border Style="{StaticResource callout}" Margin="0,10,0,10">
						<StackPanel Orientation="Horizontal">
							<TextBlock Style="{StaticResource Heading}" Text="If this Trigger has been set..." Margin="0,0,10,0"/>

							<ComboBox x:Name="triggerCB" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding scenario.triggersObserver}" SelectedValuePath="dataName" SelectedValue="{Binding interaction.triggerTest}" DisplayMemberPath="dataName" MinWidth="200" SelectionChanged="triggerCB_SelectionChanged"/>

							<Button x:Name="addTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</Border>

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
						<RadioButton x:Name="eventTestRB" IsChecked="{Binding interaction.branchTestEvent}" GroupName="branchrb"/>
						<Border Style="{StaticResource callout}" Width="679">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="...Fire One Of These Events"/>
								<UniformGrid Columns="2">
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Set (True)..." FontWeight="Normal">
										<ComboBox x:Name="eventTrue" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.interactionObserver}" SelectedValue="{Binding interaction.triggerIsSet}" SelectedValuePath="dataName" FontSize="12"/>
									</GroupBox>
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Not Set (False)..." FontWeight="Normal">
										<ComboBox x:Name="eventNotTrue" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.interactionObserver}" SelectedValue="{Binding interaction.triggerNotSet}" SelectedValuePath="dataName" FontSize="12"/>
									</GroupBox>
								</UniformGrid>
							</StackPanel>
						</Border>
					</StackPanel>

					<TextBlock Text="-OR-" Style="{StaticResource Heading}" HorizontalAlignment="Center" Margin="0,5"/>

					<StackPanel Orientation="Horizontal">
						<RadioButton x:Name="triggerTestRB" IsChecked="{Binding interaction.branchTestEvent, Converter={StaticResource binv}}" GroupName="branchrb"/>
						<Border Style="{StaticResource callout}" Width="679">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="...Set One Of These Triggers"/>
								<UniformGrid Columns="2">
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Set (True)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal">
											<ComboBox x:Name="eventTrueTrigger" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.triggerIsSetTrigger}" SelectedValuePath="dataName" FontSize="12" MinWidth="234"/>

											<Button x:Name="addTriggerButton2" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton2_Click">
												<Image Source="/JiME;component/Assets/add2.png"/>
											</Button>

										</StackPanel>
									</GroupBox>
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Not Set (False)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal">
											<ComboBox x:Name="eventNotTrueTrigger" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding scenario.triggersObserver}" SelectedValue="{Binding interaction.triggerNotSetTrigger}" SelectedValuePath="dataName" FontSize="12" MinWidth="234"/>

											<Button x:Name="addTriggerButton3" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton3_Click">
												<Image Source="/JiME;component/Assets/add2.png"/>
											</Button>
										</StackPanel>

									</GroupBox>
								</UniformGrid>
							</StackPanel>
						</Border>
					</StackPanel>
				</StackPanel>
			</TabItem>

		</TabControl>

		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</StackPanel>

	<!--<StackPanel>-->

	<!--<GroupBox Header="Threat" Style="{StaticResource DefaultGroupBox}" Visibility="{Binding ElementName=threatRB,Path=IsChecked,Converter={StaticResource radioconv}}">

		</GroupBox>-->

	<!--<GroupBox Header="Decision" Style="{StaticResource DefaultGroupBox}" Visibility="{Binding ElementName=decisionRB,Path=IsChecked,Converter={StaticResource radioconv}}">

		</GroupBox>-->



	<!--footer-->
	<!--</StackPanel>-->
</Window>
